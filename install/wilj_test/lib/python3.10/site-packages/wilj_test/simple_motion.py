import rclpy
from rclpy.node import Node
from geometry_msgs.msg import Twist
import time

class SimpleMotion(Node):
    def __init__(self):
        super().__init__('simple_motion')
        self.publisher_ = self.create_publisher(Twist, '/cmd_vel', 10)
        time.sleep(2)  # Give time for connections to establish

    def move_robot(self, linear_x, duration):
        """Moves the robot forward or backward"""
        twist = Twist()
        twist.linear.x = linear_x  # Set forward/backward speed
        twist.angular.z = 0.0  # No rotation
        
        self.publisher_.publish(twist)
        time.sleep(duration)  # Move for the specified duration

        # Stop the robot
        twist.linear.x = 0.0
        self.publisher_.publish(twist)
    
    def execute(self):
        self.get_logger().info("Moving forward...")
        self.move_robot(0.1, 3)  # Move forward slowly for 3 seconds

        self.get_logger().info("Moving backward...")
        self.move_robot(-0.1, 3)  # Move backward slowly for 3 seconds

        self.get_logger().info("Motion complete!")

def main(args=None):
    rclpy.init(args=args)
    node = SimpleMotion()
    node.execute()
    node.destroy_node()
    rclpy.shutdown()

if __name__ == '__main__':
    main()
